version: '3.9'

# 1. Definimos uma rede dedicada para esta aplicação.
# Isso isola os serviços e é uma prática melhor do que usar uma rede externa como a do Portainer.
networks:
  s2c_network:
    name: s2c_network
    driver: bridge

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    # 2. Removemos a exposição de portas.
    # O Traefik (proxy reverso) cuidará do acesso. Expor a porta diretamente
    # para a máquina host é desnecessário e menos seguro.
    # ports:
    #   - "${BACKEND_PORT}:${BACKEND_PORT}"
    command: >
      poetry run uvicorn main:app
      --host 0.0.0.0
      --port ${BACKEND_PORT}
    networks:
      - s2c_network # Conecta o serviço à nossa rede dedicada
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s2c-back.rule=Host(`${BACKEND_DOMAIN}`)"
      - "traefik.http.routers.s2c-back.entrypoints=websecure"
      - "traefik.http.routers.s2c-back.tls.certresolver=letsencrypt"
      - "traefik.http.services.s2c-back.loadbalancer.server.port=${BACKEND_PORT}"
      # 3. Especificamos a rede para o Traefik usar
      - "traefik.docker.network=s2c_network"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # 4. Mantemos as URLs públicas.
        # Como explicado, isso é OBRIGATÓRIO para que o código no navegador do usuário
        # consiga encontrar o backend.
        VITE_HTTP_BACKEND_URL: ${VITE_HTTP_BACKEND_URL}
        VITE_WS_BACKEND_URL: ${VITE_WS_BACKEND_URL}
    env_file:
      - .env
    # Também removemos a exposição de porta aqui pelo mesmo motivo do backend.
    # ports:
    #   - "5173:5173"
    depends_on:
      - backend
    networks:
      - s2c_network # Conecta o serviço à nossa rede dedicada
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s2c-front.rule=Host(`${FRONTEND_DOMAIN}`)"
      - "traefik.http.routers.s2c-front.entrypoints=websecure"
      - "traefik.http.routers.s2c-front.tls.certresolver=letsencrypt"
      - "traefik.http.services.s2c-front.loadbalancer.server.port=5173"
      # 3. Especificamos a rede para o Traefik usar
      - "traefik.docker.network=s2c_network"
